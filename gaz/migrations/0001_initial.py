# Generated by Django 5.0.4 on 2024-05-17 14:25

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Gaz',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=128, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rtype', models.CharField(max_length=128)),
                ('weight', models.IntegerField(default=0)),
                ('size', models.CharField(choices=[('small', 'Small'), ('middle', 'Midlle'), ('great', 'Great')], max_length=8)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('img', models.ImageField(blank=True, null=True, upload_to='gaz/')),
            ],
            options={
                'verbose_name': 'Gaz',
                'verbose_name_plural': 'Gazs',
                'db_table': 'gaz',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=128, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lng', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('lat', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('street', models.CharField(max_length=16)),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
                'db_table': 'Location',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=128, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=32)),
                ('subject', models.CharField(max_length=32)),
                ('status', models.BooleanField(choices=[('read', 'Read'), ('unread', 'Unread'), ('marked', 'Marked')], default='unread', max_length=8)),
                ('message', models.TextField(max_length=1000)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'db_table': 'Notification',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=128, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('username', models.CharField(max_length=32, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=128, null=True)),
                ('last_name', models.CharField(blank=True, max_length=128, null=True)),
                ('password', models.CharField(max_length=128)),
                ('phone_number1', models.CharField(max_length=32)),
                ('phone_number2', models.CharField(max_length=32)),
                ('role', models.CharField(choices=[('Admin', 'Admin'), ('client', 'Client'), ('saleman', 'Saleman')], default='client', max_length=16)),
                ('img', models.ImageField(default='nouser.png', upload_to='user')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('location', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='user_location', to='gaz.location')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'user',
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Depot',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=128, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('state', models.CharField(choices=[('open', 'Open'), ('close', 'Close')], default='open', max_length=8)),
                ('stock', models.IntegerField(default=0)),
                ('saleman', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='depot_saleman', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Qte',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=128, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.IntegerField(default=0)),
                ('depot', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='qte_depot', to='gaz.depot')),
                ('gaz', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='qte_gaz', to='gaz.gaz')),
            ],
            options={
                'verbose_name': 'Qte',
                'verbose_name_plural': 'Qtes',
                'db_table': 'qte',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Recharge',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=128, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('count', models.IntegerField(default=0)),
                ('state', models.CharField(choices=[('complet', 'Complet'), ('partial', 'Partial')], max_length=8)),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('gaz', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='recharge_gaz', to='gaz.gaz')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='recharge_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Recharge',
                'verbose_name_plural': 'Recharges',
                'db_table': 'recharge',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=128, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(max_length=128)),
                ('phone', models.CharField(max_length=150)),
                ('fees', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('commission', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('distance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('canceled', 'Canceled')], default='pending', max_length=16)),
                ('recharge', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='transaction_recharge', to='gaz.recharge')),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'db_table': 'Transaction',
                'ordering': ['-created_at'],
            },
        ),
    ]
